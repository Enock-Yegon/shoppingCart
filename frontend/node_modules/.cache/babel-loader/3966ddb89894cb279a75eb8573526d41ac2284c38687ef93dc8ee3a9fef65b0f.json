{"ast":null,"code":"var _jsxFileName = \"/home/user/Development/code/phase2/react/e-commerce/src/components/LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport GoogleLogin from \"react-google-login\";\nimport { gapi } from \"gapi-script\";\nimport Navbar from \"./Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  useEffect(() => {\n    function start() {\n      gapi.client.init({\n        clientId: \"79474543031-tmjo35916ufn421ej3u1i2ljao2apr4s.apps.googleusercontent.com\",\n        scope: \"\"\n      });\n    }\n    gapi.load('client: auth2', start);\n  });\n  const [popupStyle, showPopup] = useState(\"hide\");\n  const popup = () => {\n    showPopup(\"login-popup\");\n    setTimeout(() => showPopup(\"hide\"), 3000);\n  };\n  const onSuccess = e => {\n    alert(\"User signed in\");\n    console.log(e);\n  };\n  const onFailure = e => {\n    alert(\"User sign in Failed\");\n    console.log(e);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cover\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn btn-danger ms-2\",\n        onClick: popup,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alt-login\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"facebook\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"google\",\n          children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n            className: \"blue\",\n            clientId: \"79474543031-tmjo35916ufn421ej3u1i2ljao2apr4s.apps.googleusercontent.com\",\n            buttonText: \"\",\n            onSuccess: onSuccess,\n            onFailure: onFailure,\n            cookiePolicy: 'single_host_origin',\n            isSignedIn: false // alternative is true, which keeps the user signed in\n            ,\n            icon: false // alt is true, and this puts the google logo on your button, but I don't like it\n            ,\n            theme: \"dark\" // alternative is light, which is white\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(LoginForm, \"4n9URTNB4DDtRj1Bvkxso3Z+AS8=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useEffect","useState","GoogleLogin","gapi","Navbar","LoginForm","start","client","init","clientId","scope","load","popupStyle","showPopup","popup","setTimeout","onSuccess","e","alert","console","log","onFailure"],"sources":["/home/user/Development/code/phase2/react/e-commerce/src/components/LoginForm.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport GoogleLogin from \"react-google-login\";\nimport { gapi } from \"gapi-script\";\nimport Navbar from \"./Navbar\";\n\nconst LoginForm = () => {\n\n    useEffect(() => {\n        function start() {\n            gapi.client.init({\n                clientId: \"79474543031-tmjo35916ufn421ej3u1i2ljao2apr4s.apps.googleusercontent.com\",\n                scope: \"\"\n            })\n        }\n        gapi.load('client: auth2', start)\n    })\n\n    const [popupStyle, showPopup] = useState(\"hide\")\n\n    const popup = () => {\n        showPopup(\"login-popup\")\n        setTimeout(() => showPopup(\"hide\"), 3000)\n    }\n\n    const onSuccess = e => {\n        alert(\"User signed in\")\n        console.log(e)\n    }\n\n    const onFailure = e => {\n        alert(\"User sign in Failed\")\n        console.log(e)\n    }\n\n    return (\n        <>\n        <Navbar/>\n        <div className=\"cover\">\n            <h1>Login</h1>\n            <input type=\"text\" placeholder=\"username\" />\n            <input type=\"password\" placeholder=\"password\" />\n\n            <div className=\"btn btn-danger ms-2\" onClick={popup}>Login</div>\n\n            {/* <p className=\"text\">Or login using</p> */}\n\n            <div className=\"alt-login\">\n                <div className=\"facebook\"></div>\n                <div className=\"google\">\n                    <GoogleLogin className=\"blue\"\n                        clientId=\"79474543031-tmjo35916ufn421ej3u1i2ljao2apr4s.apps.googleusercontent.com\"\n                        buttonText=\"\"\n                        onSuccess={onSuccess}\n                        onFailure={onFailure}\n                        cookiePolicy={'single_host_origin'}\n                        isSignedIn={false} // alternative is true, which keeps the user signed in\n                        icon={false}    // alt is true, and this puts the google logo on your button, but I don't like it\n                        theme=\"dark\"  // alternative is light, which is white\n                    />\n                </div>\n            </div>\n\n            {/* <div className={popupStyle}>\n                <h3>Login Failed</h3>\n                <p>Username or password incorrect</p>\n            </div> */}\n            \n        </div>\n        </>\n    )\n}\n\nexport default LoginForm"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,SAASC,IAAI,QAAQ,aAAa;AAClC,OAAOC,MAAM,MAAM,UAAU;AAAC;AAAA;AAE9B,MAAMC,SAAS,GAAG,MAAM;EAAA;EAEpBL,SAAS,CAAC,MAAM;IACZ,SAASM,KAAK,GAAG;MACbH,IAAI,CAACI,MAAM,CAACC,IAAI,CAAC;QACbC,QAAQ,EAAE,yEAAyE;QACnFC,KAAK,EAAE;MACX,CAAC,CAAC;IACN;IACAP,IAAI,CAACQ,IAAI,CAAC,eAAe,EAAEL,KAAK,CAAC;EACrC,CAAC,CAAC;EAEF,MAAM,CAACM,UAAU,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,MAAM,CAAC;EAEhD,MAAMa,KAAK,GAAG,MAAM;IAChBD,SAAS,CAAC,aAAa,CAAC;IACxBE,UAAU,CAAC,MAAMF,SAAS,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC;EAC7C,CAAC;EAED,MAAMG,SAAS,GAAGC,CAAC,IAAI;IACnBC,KAAK,CAAC,gBAAgB,CAAC;IACvBC,OAAO,CAACC,GAAG,CAACH,CAAC,CAAC;EAClB,CAAC;EAED,MAAMI,SAAS,GAAGJ,CAAC,IAAI;IACnBC,KAAK,CAAC,qBAAqB,CAAC;IAC5BC,OAAO,CAACC,GAAG,CAACH,CAAC,CAAC;EAClB,CAAC;EAED,oBACI;IAAA,wBACA,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAE,eACT;MAAK,SAAS,EAAC,OAAO;MAAA,wBAClB;QAAA,UAAI;MAAK;QAAA;QAAA;QAAA;MAAA,QAAK,eACd;QAAO,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAG,eAC5C;QAAO,IAAI,EAAC,UAAU;QAAC,WAAW,EAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAG,eAEhD;QAAK,SAAS,EAAC,qBAAqB;QAAC,OAAO,EAAEH,KAAM;QAAA,UAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAM,eAIhE;QAAK,SAAS,EAAC,WAAW;QAAA,wBACtB;UAAK,SAAS,EAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAO,eAChC;UAAK,SAAS,EAAC,QAAQ;UAAA,uBACnB,QAAC,WAAW;YAAC,SAAS,EAAC,MAAM;YACzB,QAAQ,EAAC,yEAAyE;YAClF,UAAU,EAAC,EAAE;YACb,SAAS,EAAEE,SAAU;YACrB,SAAS,EAAEK,SAAU;YACrB,YAAY,EAAE,oBAAqB;YACnC,UAAU,EAAE,KAAM,CAAC;YAAA;YACnB,IAAI,EAAE,KAAM,CAAI;YAAA;YAChB,KAAK,EAAC,MAAM,CAAE;UAAA;YAAA;YAAA;YAAA;UAAA;QAChB;UAAA;UAAA;UAAA;QAAA,QACA;MAAA;QAAA;QAAA;QAAA;MAAA,QACJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAOJ;EAAA,gBACH;AAEX,CAAC;AAAA,GAjEKhB,SAAS;AAAA,KAATA,SAAS;AAmEf,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}